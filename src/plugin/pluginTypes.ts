import type { ConfigPluginOptions } from "./types";

// This file is auto-generated by the codegenCli

export interface ThirdPartyAutomatedPlugins {
    // Packages with ts-ignore override:

    // Packages with manual path override:
    "@azesmway/react-native-unity": ConfigPluginOptions<typeof import("@azesmway/react-native-unity/lib/typescript/plugin/src/index.d.ts")["default"]>;
    "@bitdrift/react-native": ConfigPluginOptions<typeof import("@bitdrift/react-native/typescript/packages/react-native/src/plugin/withBitdrift.d.ts")["default"]>;
    "@survicate/react-native-survicate": ConfigPluginOptions<typeof import("@survicate/react-native-survicate/lib/typescript/expo/withSurvicate.d.ts")["default"]>;
    "expo-color-space-plugin": ConfigPluginOptions<typeof import("expo-color-space-plugin/build/index.d.ts")["default"]>;
    "instabug-reactnative": ConfigPluginOptions<typeof import("instabug-reactnative/plugin/src/index")["default"]>;
    "onesignal-expo-plugin": ConfigPluginOptions<typeof import("onesignal-expo-plugin/onesignal/withOneSignal.ts")["default"]>;
    "react-native-fast-tflite": ConfigPluginOptions<typeof import("react-native-fast-tflite/lib/typescript/src/expo-plugin/withFastTFLite")["default"]>;
    "react-native-full-screen-notification-incoming-call": ConfigPluginOptions<typeof import("react-native-full-screen-notification-incoming-call/src/expo.ts")["default"]>;
    "react-native-keys": ConfigPluginOptions<typeof import("react-native-keys/lib/typescript/plugin/src/index.d.ts")["default"]>;
    "react-native-localize": ConfigPluginOptions<typeof import("react-native-localize/src/expo.ts")["default"]>;

    // Packages with detected types:
    "@appandflow/expo-camera-characteristics": ConfigPluginOptions<typeof import("@appandflow/expo-camera-characteristics/plugin/build/index")["default"]>;
    "@bacons/apple-colors": ConfigPluginOptions<typeof import("@bacons/apple-colors/plugin/build/withAndroidColors")["default"]>;
    "@bam.tech/react-native-batch": ConfigPluginOptions<typeof import("@bam.tech/react-native-batch/plugin/build/withReactNativeBatch")["default"]>;
    "@batch.com/react-native-plugin": ConfigPluginOptions<typeof import("@batch.com/react-native-plugin/plugin/build/withReactNativeBatch")["default"]>;
    "@bittingz/expo-widgets": ConfigPluginOptions<typeof import("@bittingz/expo-widgets/plugin/build/index")["default"]>;
    "@braze/expo-plugin": ConfigPluginOptions<typeof import("@braze/expo-plugin/build/withBraze")["default"]>;
    "@config-plugins/react-native-blob-util": ConfigPluginOptions<typeof import("@config-plugins/react-native-blob-util/build/withReactNativeBlobUtil")["default"]>;
    "@config-plugins/react-native-pdf": ConfigPluginOptions<typeof import("@config-plugins/react-native-pdf/build/withPdf")["default"]>;
    "@fishjam-cloud/react-native-client": ConfigPluginOptions<typeof import("@fishjam-cloud/react-native-client/plugin/build/withFishjam")["default"]>;
    "@iterable/expo-plugin": ConfigPluginOptions<typeof import("@iterable/expo-plugin/plugin/build/withIterable")["default"]>;
    "@prisma/react-native": ConfigPluginOptions<typeof import("@prisma/react-native/plugin/build/index")["default"]>;
    "@react-native-community/datetimepicker": ConfigPluginOptions<typeof import("@react-native-community/datetimepicker/plugin/build/withDateTimePickerStyles")["default"]>;
    "@react-native-firebase/app": ConfigPluginOptions<typeof import("@react-native-firebase/app/plugin/build/index")["default"]>;
    "@react-native-firebase/app-check": ConfigPluginOptions<typeof import("@react-native-firebase/app-check/plugin/build/index")["default"]>;
    "@react-native-firebase/app-distribution": ConfigPluginOptions<typeof import("@react-native-firebase/app-distribution/plugin/build/index")["default"]>;
    "@react-native-firebase/auth": ConfigPluginOptions<typeof import("@react-native-firebase/auth/plugin/build/index")["default"]>;
    "@react-native-firebase/crashlytics": ConfigPluginOptions<typeof import("@react-native-firebase/crashlytics/plugin/build/index")["default"]>;
    "@react-native-firebase/messaging": ConfigPluginOptions<typeof import("@react-native-firebase/messaging/plugin/build/index")["default"]>;
    "@react-native-firebase/perf": ConfigPluginOptions<typeof import("@react-native-firebase/perf/plugin/build/index")["default"]>;
    "@react-native-seoul/naver-login": ConfigPluginOptions<typeof import("@react-native-seoul/naver-login/plugin/build/index")["default"]>;
    "@react-native-voice/voice": ConfigPluginOptions<typeof import("@react-native-voice/voice/plugin/build/withVoice")["default"]>;
    "@reactvision/react-viro": ConfigPluginOptions<typeof import("@reactvision/react-viro/dist/plugins/withViro")["default"]>;
    "@rnmapbox/maps": ConfigPluginOptions<typeof import("@rnmapbox/maps/plugin/build/withMapbox")["default"]>;
    "@wwdrew/expo-android-account-manager": ConfigPluginOptions<typeof import("@wwdrew/expo-android-account-manager/plugin/build/index")["default"]>;
    "@wwdrew/expo-spotify-sdk": ConfigPluginOptions<typeof import("@wwdrew/expo-spotify-sdk/plugin/build/index")["default"]>;
    "@zoontek/react-native-navigation-bar": ConfigPluginOptions<typeof import("@zoontek/react-native-navigation-bar/dist/typescript/expo")["default"]>;
    "expo-alternate-app-icons": ConfigPluginOptions<typeof import("expo-alternate-app-icons/plugin/build/index")["default"]>;
    "expo-apple-authentication": ConfigPluginOptions<typeof import("expo-apple-authentication/plugin/build/withAppleAuth")["default"]>;
    "expo-audio": ConfigPluginOptions<typeof import("expo-audio/plugin/build/withAudio")["default"]>;
    "expo-av": ConfigPluginOptions<typeof import("expo-av/plugin/build/withAV")["default"]>;
    "expo-background-fetch": ConfigPluginOptions<typeof import("expo-background-fetch/plugin/build/withBackgroundFetch")["default"]>;
    "expo-background-task": ConfigPluginOptions<typeof import("expo-background-task/plugin/build/withBackgroundTask")["default"]>;
    "expo-brightness": ConfigPluginOptions<typeof import("expo-brightness/plugin/build/withBrightness")["default"]>;
    "expo-build-properties": ConfigPluginOptions<typeof import("expo-build-properties/build/withBuildProperties")["default"]>;
    "expo-calendar": ConfigPluginOptions<typeof import("expo-calendar/plugin/build/withCalendar")["default"]>;
    "expo-camera": ConfigPluginOptions<typeof import("expo-camera/plugin/build/withCamera")["default"]>;
    "expo-cellular": ConfigPluginOptions<typeof import("expo-cellular/plugin/build/withCellular")["default"]>;
    "expo-contacts": ConfigPluginOptions<typeof import("expo-contacts/plugin/build/withContacts")["default"]>;
    "expo-core-spotlight": ConfigPluginOptions<typeof import("expo-core-spotlight/plugin/build/index")["default"]>;
    "expo-custom-assets": ConfigPluginOptions<typeof import("expo-custom-assets/build/index")["default"]>;
    "expo-dev-client": ConfigPluginOptions<typeof import("expo-dev-client/plugin/build/withDevClient")["default"]>;
    "expo-document-picker": ConfigPluginOptions<typeof import("expo-document-picker/plugin/build/withDocumentPicker")["default"]>;
    "expo-dynamic-app-icon": ConfigPluginOptions<typeof import("expo-dynamic-app-icon/plugin/build/withDynamicIcon")["default"]>;
    "expo-file-system": ConfigPluginOptions<typeof import("expo-file-system/plugin/build/withFileSystem")["default"]>;
    "expo-health-connect": ConfigPluginOptions<typeof import("expo-health-connect/build/withHealthConnect")["default"]>;
    "expo-iap": ConfigPluginOptions<typeof import("expo-iap/plugin/build/withIAP")["default"]>;
    "expo-image-picker": ConfigPluginOptions<typeof import("expo-image-picker/plugin/build/withImagePicker")["default"]>;
    "expo-libvlc-player": ConfigPluginOptions<typeof import("expo-libvlc-player/plugin/build/withExpoLibVlcPlayer")["default"]>;
    "expo-live-activity": ConfigPluginOptions<typeof import("expo-live-activity/plugin/build/index")["default"]>;
    "expo-local-authentication": ConfigPluginOptions<typeof import("expo-local-authentication/plugin/build/withLocalAuthentication")["default"]>;
    "expo-localization": ConfigPluginOptions<typeof import("expo-localization/plugin/build/withExpoLocalization")["default"]>;
    "expo-location": ConfigPluginOptions<typeof import("expo-location/plugin/build/withLocation")["default"]>;
    "expo-mail-composer": ConfigPluginOptions<typeof import("expo-mail-composer/plugin/build/withMailComposer")["default"]>;
    "expo-maps": ConfigPluginOptions<typeof import("expo-maps/plugin/build/withMapsLocation")["default"]>;
    "expo-media-library": ConfigPluginOptions<typeof import("expo-media-library/plugin/build/withMediaLibrary")["default"]>;
    "expo-navigation-bar": ConfigPluginOptions<typeof import("expo-navigation-bar/plugin/build/withNavigationBar")["default"]>;
    "expo-notifications": ConfigPluginOptions<typeof import("expo-notifications/plugin/build/withNotifications")["default"]>;
    "expo-pip": ConfigPluginOptions<typeof import("expo-pip/plugin/build/index")["default"]>;
    "expo-router": ConfigPluginOptions<typeof import("expo-router/plugin/build/index")["default"]>;
    "expo-screen-orientation": ConfigPluginOptions<typeof import("expo-screen-orientation/plugin/build/withScreenOrientation")["default"]>;
    "expo-secure-store": ConfigPluginOptions<typeof import("expo-secure-store/plugin/build/withSecureStore")["default"]>;
    "expo-sensors": ConfigPluginOptions<typeof import("expo-sensors/plugin/build/withSensors")["default"]>;
    "expo-share-extension": ConfigPluginOptions<typeof import("expo-share-extension/plugin/build/index")["default"]>;
    "expo-share-intent": ConfigPluginOptions<typeof import("expo-share-intent/plugin/build/index")["default"]>;
    "expo-shazamkit": ConfigPluginOptions<typeof import("expo-shazamkit/plugin/build/withShazamKit")["default"]>;
    "expo-splash-screen": ConfigPluginOptions<typeof import("expo-splash-screen/plugin/build/withSplashScreen")["default"]>;
    "expo-system-ui": ConfigPluginOptions<typeof import("expo-system-ui/plugin/build/withSystemUI")["default"]>;
    "expo-task-manager": ConfigPluginOptions<typeof import("expo-task-manager/plugin/build/withTaskManager")["default"]>;
    "expo-tracking-transparency": ConfigPluginOptions<typeof import("expo-tracking-transparency/plugin/build/withTrackingTransparency")["default"]>;
    "expo-updates": ConfigPluginOptions<typeof import("expo-updates/plugin/build/withUpdates")["default"]>;
    "expo-video": ConfigPluginOptions<typeof import("expo-video/plugin/build/withExpoVideo")["default"]>;
    "expo-web-browser": ConfigPluginOptions<typeof import("expo-web-browser/plugin/build/withWebBrowser")["default"]>;
    "freerasp-react-native": ConfigPluginOptions<typeof import("freerasp-react-native/plugin/build/index")["default"]>;
    "newrelic-react-native-agent": ConfigPluginOptions<typeof import("newrelic-react-native-agent/plugin/build/index")["default"]>;
    "react-native-add-calendar-event": ConfigPluginOptions<typeof import("react-native-add-calendar-event/plugin/build/withAddCalendarEvent")["default"]>;
    "react-native-admob-native-ads": ConfigPluginOptions<typeof import("react-native-admob-native-ads/plugin/build/withAdmobNativeAds")["default"]>;
    "react-native-app-clip": ConfigPluginOptions<typeof import("react-native-app-clip/plugin/build/index")["default"]>;
    "react-native-audio-api": ConfigPluginOptions<typeof import("react-native-audio-api/lib/typescript/plugin/withAudioAPI")["default"]>;
    "react-native-auth0": ConfigPluginOptions<typeof import("react-native-auth0/lib/typescript/plugin/withAuth0")["default"]>;
    "react-native-background-fetch": ConfigPluginOptions<typeof import("react-native-background-fetch/expo/plugin/build/index")["default"]>;
    "react-native-background-geolocation": ConfigPluginOptions<typeof import("react-native-background-geolocation/expo/plugin/build/index")["default"]>;
    "react-native-ble-manager": ConfigPluginOptions<typeof import("react-native-ble-manager/plugin/build/withBLE")["default"]>;
    "react-native-ble-plx": ConfigPluginOptions<typeof import("react-native-ble-plx/plugin/build/withBLE")["default"]>;
    "react-native-cloud-storage": ConfigPluginOptions<typeof import("react-native-cloud-storage/dist/typescript/expo-plugin/index")["default"]>;
    "react-native-compressor": ConfigPluginOptions<typeof import("react-native-compressor/lib/typescript/expo-plugin/compressor")["default"]>;
    "react-native-document-scanner-plugin": ConfigPluginOptions<typeof import("react-native-document-scanner-plugin/expo-plugin/build/withDocumentScanner")["default"]>;
    "react-native-edge-to-edge": ConfigPluginOptions<typeof import("react-native-edge-to-edge/dist/typescript/expo")["default"]>;
    "react-native-fbads": ConfigPluginOptions<typeof import("react-native-fbads/plugin/build/withReactNativeFbads")["default"]>;
    "react-native-fbsdk-next": ConfigPluginOptions<typeof import("react-native-fbsdk-next/plugin/build/withFacebook")["default"]>;
    "react-native-google-cast": ConfigPluginOptions<typeof import("react-native-google-cast/lib/typescript/plugin/withGoogleCast")["default"]>;
    "react-native-google-mobile-ads": ConfigPluginOptions<typeof import("react-native-google-mobile-ads/plugin/build/index")["default"]>;
    "react-native-image-marker": ConfigPluginOptions<typeof import("react-native-image-marker/lib/typescript/expo-plugin/withImageMarker")["default"]>;
    "react-native-legal": ConfigPluginOptions<typeof import("react-native-legal/plugin/build/index")["default"]>;
    "react-native-localization-settings": ConfigPluginOptions<typeof import("react-native-localization-settings/plugin/build/index")["default"]>;
    "react-native-localize-date": ConfigPluginOptions<typeof import("react-native-localize-date/plugin/build/withLocalizations")["default"]>;
    "react-native-msal": ConfigPluginOptions<typeof import("react-native-msal/plugin/build/withReactNativeMSAL")["default"]>;
    "react-native-nitro-screen-recorder": ConfigPluginOptions<typeof import("react-native-nitro-screen-recorder/plugin/build/index")["default"]>;
    "react-native-permissions": ConfigPluginOptions<typeof import("react-native-permissions/dist/typescript/expo")["default"]>;
    "react-native-rate-app": ConfigPluginOptions<typeof import("react-native-rate-app/lib/typescript/plugin/withReactNativeRateApp")["default"]>;
    "react-native-screenshot-aware": ConfigPluginOptions<typeof import("react-native-screenshot-aware/lib/typescript/plugin/withReactNativeScreenshotAware")["default"]>;
    "react-native-share": ConfigPluginOptions<typeof import("react-native-share/plugin/build/index")["default"]>;
    "react-native-theoplayer": ConfigPluginOptions<typeof import("react-native-theoplayer/lib/typescript/plugins/expo/withTHEOplayer")["default"]>;
    "react-native-twilio-video-webrtc": ConfigPluginOptions<typeof import("react-native-twilio-video-webrtc/plugin/build/index")["default"]>;
    "react-native-v8": ConfigPluginOptions<typeof import("react-native-v8/plugin/build/withV8ExpoAdapter")["default"]>;
    "react-native-video": ConfigPluginOptions<typeof import("react-native-video/lib/expo-plugins/withRNVideo")["default"]>;
    "react-native-vision-camera": ConfigPluginOptions<typeof import("react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera")["default"]>;
    "react-native-vosk": ConfigPluginOptions<typeof import("react-native-vosk/plugin/build/withVosk")["default"]>;
    "react-native-wifi-reborn": ConfigPluginOptions<typeof import("react-native-wifi-reborn/plugin/dist/withWifi")["default"]>;

    // Packages with custom alias:
    "@sentry/react-native": ConfigPluginOptions<typeof import("@sentry/react-native/plugin/build/index")["default"]>;
    "@sentry/react-native/expo": ConfigPluginOptions<typeof import("@sentry/react-native/plugin/build/index")["default"]>;

    // Packages without types:
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@beyondidentity/bi-sdk-react-native": ConfigPluginOptions<typeof import("@beyondidentity/bi-sdk-react-native/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@bravemobile/react-native-code-push": ConfigPluginOptions<typeof import("@bravemobile/react-native-code-push/expo/plugin/withCodePush")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@corasan/image-compressor": ConfigPluginOptions<typeof import("@corasan/image-compressor/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@giphy/react-native-sdk": ConfigPluginOptions<typeof import("@giphy/react-native-sdk/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@hot-updater/react-native": ConfigPluginOptions<typeof import("@hot-updater/react-native/plugin/build/withHotUpdater")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@intercom/intercom-react-native": ConfigPluginOptions<typeof import("@intercom/intercom-react-native/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@kingstinct/react-native-activity-kit": ConfigPluginOptions<typeof import("@kingstinct/react-native-activity-kit/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@kingstinct/react-native-healthkit": ConfigPluginOptions<typeof import("@kingstinct/react-native-healthkit/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@maplibre/maplibre-react-native": ConfigPluginOptions<typeof import("@maplibre/maplibre-react-native/lib/typescript/plugin/withMapLibre")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@react-native-google-signin/google-signin": ConfigPluginOptions<typeof import("@react-native-google-signin/google-signin/plugin/build/withGoogleSignIn")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@stripe/stripe-react-native": ConfigPluginOptions<typeof import("@stripe/stripe-react-native/lib/typescript/plugin/withStripe")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@vonovak/react-native-theme-control": ConfigPluginOptions<typeof import("@vonovak/react-native-theme-control/plugin/build/withThemeControl")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "@xmartlabs/react-native-line": ConfigPluginOptions<typeof import("@xmartlabs/react-native-line/plugin/withLineSDK")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "app-icon-badge": ConfigPluginOptions<typeof import("app-icon-badge/dist/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-asset": ConfigPluginOptions<typeof import("expo-asset/plugin/build/withAssets")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-font": ConfigPluginOptions<typeof import("expo-font/plugin/build/withFonts")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-music-picker": ConfigPluginOptions<typeof import("expo-music-picker/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-native-alipay": ConfigPluginOptions<typeof import("expo-native-alipay/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-quick-actions": ConfigPluginOptions<typeof import("expo-quick-actions/plugin/build/index")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-roomplan": ConfigPluginOptions<typeof import("expo-roomplan/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-speech-recognition": ConfigPluginOptions<typeof import("expo-speech-recognition/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-sqlite": ConfigPluginOptions<typeof import("expo-sqlite/plugin/build/withSQLite")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "expo-superwall": ConfigPluginOptions<typeof import("expo-superwall/plugin/build/index")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "pushy-expo-plugin": ConfigPluginOptions<typeof import("pushy-expo-plugin/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-appsflyer": ConfigPluginOptions<typeof import("react-native-appsflyer/expo/withAppsFlyer")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-auto-skeleton": ConfigPluginOptions<typeof import("react-native-auto-skeleton/src/expo-plugins/withAutoSkeleton")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-bootsplash": ConfigPluginOptions<typeof import("react-native-bootsplash/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-bottom-tabs": ConfigPluginOptions<typeof import("react-native-bottom-tabs/lib/typescript/expo")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-capture-protection": ConfigPluginOptions<typeof import("react-native-capture-protection/plugins/withPlugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-cloud-store": ConfigPluginOptions<typeof import("react-native-cloud-store/plugins/withCloud")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-credentials-manager": ConfigPluginOptions<typeof import("react-native-credentials-manager/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-email-link": ConfigPluginOptions<typeof import("react-native-email-link/plugin/withEmailLink")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-google-auth": ConfigPluginOptions<typeof import("react-native-google-auth/plugin/build/withGoogleAuth")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-health": ConfigPluginOptions<typeof import("react-native-health/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-health-connect": ConfigPluginOptions<typeof import("react-native-health-connect/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-iap": ConfigPluginOptions<typeof import("react-native-iap/plugin/build/withIAP")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-libsodium": ConfigPluginOptions<typeof import("react-native-libsodium/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-map-link": ConfigPluginOptions<typeof import("react-native-map-link/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-maps": ConfigPluginOptions<typeof import("react-native-maps/plugin/build/index")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-navigation-mode": ConfigPluginOptions<typeof import("react-native-navigation-mode/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-nfc-manager": ConfigPluginOptions<typeof import("react-native-nfc-manager/app.plugin")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-orientation-director": ConfigPluginOptions<typeof import("react-native-orientation-director/plugin/build/index")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-ota-hot-update": ConfigPluginOptions<typeof import("react-native-ota-hot-update/plugin/build/index")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-render-lynx": ConfigPluginOptions<typeof import("react-native-render-lynx/plugin/withRenderLynx")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-tiktok": ConfigPluginOptions<typeof import("react-native-tiktok/plugin/build/withTiktok")["default"]>;
    // @ts-expect-error [Package doesn't ship types for app.plugin.js]
    "react-native-vlc-media-player": ConfigPluginOptions<typeof import("react-native-vlc-media-player/expo/withVlcMediaPlayer")["default"]>;

    /* Errors:
[
  [
    "does not ship an app.plugin.js:",
    [
      "@datadog/mobile-react-native",
      "@sparkfabrik/react-native-idfa-aaid",
      "react-native-nitro-sound",
      "react-native-quick-crypto",
      "react-native-whip-whep",
      "rn-fade-wrapper"
    ]
  ]
]
    */
}
